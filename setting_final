# docker_kubernetes
도커와 쿠버네티스 설치

1. 도커 설치
1-1. 도커 스크립트를 우분투 혹은 리눅스 OS에 .sh파일로 저장
-> nano install-docker.sh
1-2. 실행 권한부여
-> chmod +x install-docker.sh
1-3. 실행
-> ./install-docker.sh

2. 쿠버네티스 설치
2-1. 쿠버네티스 스크립트를 OS에 .sh파일로 저장
-> nano install-kubernetes.sh
2-2. 실행 권한부여
-> chmod +x install-kubernetes.sh
2-3. 실행
-> ./install-kubernetes.sh
2-4. systemctroup 설정
-> sudo mkdir -p /etc/containerd
   containerd config default | sudo tee /etc/containerd/config.toml > /dev/null
   sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
   sudo nano /etc/containerd/config.toml 아래의 이미지 참고하여 수정
   https://github.com/user-attachments/assets/a34b242b-9974-423b-bb95-de4fc7dcbca0
   sudo nano /etc/containerd/cert.d
   -> 10.5.5.21:5000
   sudo systemctl restart containerd
   sudo systemctl enable containerd
   sudo systemctl status containerd
3. 클러스터 초기화
sudo kubeadm reset -f
sudo rm -rf /etc/kubernetes/kubelet.conf
sudo rm -rf /etc/kubernetes/pki/ca.crt
sudo rm -rf ~/.kube
sudo rm -rf /etc/cni/net.d
sudo systemctl restart containerd

sudo kubeadm init --config kubeadm-config.yaml
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kube proxy 삭제
-> kubectl -n kube-system delete ds kube-proxy

4. 워커노드에서
echo 'KUBELET_EXTRA_ARGS="--node-ip=10.5.5.23"' | sudo tee /var/lib/kubelet/kubeadm-flags.env

======== kubeadm-config.yaml ========
kubeadm-config.yaml                                                
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v1.29.15
controlPlaneEndpoint: "10.5.5.21:6443"
apiServer:
  certSANs:
    - 127.0.0.1
    - localhost
    - 192.168.100.10   # 내부 IP
    - 10.5.5.21        # 외부 접근용 IP
  extraArgs:
    authorization-mode: Node,RBAC
    enable-admission-plugins: NodeRestriction
    runtime-config: api/all=true
networking:
  podSubnet: "10.0.0.0/16"
  serviceSubnet: "10.96.0.0/12"
  dnsDomain: "cluster.local"
imageRepository: registry.k8s.io
---

apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "iptables"
================================================

5. cilium 설치
helm upgrade cilium cilium/cilium --version 1.17.3 \
  --namespace kube-system \
  --set k8sServiceHost=10.5.5.21 \  #마스터노드 IP
  --set k8sServicePort=6443 \
  --set kubeProxyReplacement=true \
  --set enableNodePort=true \
  --set nodePort.mode=snat \
  --set nodePort.device=eth0 \
  --set nodePort.enabled=true \
  --set nodePort.bindProtection=false \
  --set enableExternalIPs=true \
  --set nodeport.addresses="{0.0.0.0/0}"

6. MetalLB설치
6.1.0 : metallb 추가
helm repo add metallb https://metallb.github.io/metallb
helm repo update
cat << EOF > metallb-values.yaml
controller:
  enabled: true
speaker:
  enabled: true
EOF
kubectl create secret docker-registry regcred \
  --docker-server=10.5.5.21:5000 \
  --docker-username=culturegift \
  --docker-password=culturegift \
  --namespace metallb-system

6.1.1: helm으로 설치진행
helm install metallb metallb/metallb --version 0.13.12 \
  --namespace metallb-system \
  --create-namespace \
  --set speaker.frr.enabled=false \
  -f metallb-values.yaml

6.1.2: IPAddressPool과 L2Advertisement CRD 적용
cat << EOF > metallb-config.yaml
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: default
  namespace: metallb-system
spec:
  addresses:
  - 192.168.100.100-192.168.100.120
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: default
  namespace: metallb-system
spec:
  ipAddressPools:
  - default
EOF
kubectl apply -f metallb-config.yaml
정상작동 확인
kubectl get pods -n metallb-system
